{
	"Object property": {
		"prefix": "property",
		"body": [
			"$BLOCK_COMMENT_START*",
			" * @var ${1:mixed}",
			" $BLOCK_COMMENT_END",
			"${2:protected} $${3:name};"
		]
	},
	"Inline typed variable": {
		"prefix": "var",
		"body": [
			"$BLOCK_COMMENT_START* @var ${1:mixed} $${2} $BLOCK_COMMENT_END",
			"$${2} = ${3};"
		]
	},
	"Class file": {
		"prefix": "class",
		"body": [
			"namespace ${1:App}${2};",
			"",
			"class ${TM_FILENAME_BASE:ClassName}${3: extends }${4}",
			"{",
			"\t${5:// }",
			"}"
		]
	},
	"Interface file": {
		"prefix": "interface",
		"body": [
			"namespace ${1:App}${2};",
			"",
			"interface ${TM_FILENAME_BASE:ClassName}${3: extends }${4}",
			"{",
			"\t${5:// }",
			"}"
		]
	},
	"Trait file": {
		"prefix": "trait",
		"body": [
			"namespace ${1:App}${2};",
			"",
			"trait ${TM_FILENAME_BASE:TraitName}",
			"{",
			"\t${5:// }",
			"}"
		]
	},
	"Laravel model trait file": {
		"prefix": "mtrait",
		"body": [
			"namespace ${1:App}${2};",
			"",
			"trait ${TM_FILENAME_BASE:TraitName}",
			"{",
			"\t$BLOCK_COMMENT_START*",
     	"\t* Initialize a trait instance.",
     	"\t*",
     	"\t* @return void",
     	"\t$BLOCK_COMMENT_END",
    	"\tpublic function initialize${TM_FILENAME_BASE:TraitName}()",
    	"\t{",
			"\t\t${3:// }",
			"\t}",
			"",
			"\t${4:// }",
			"}"
		]
	},
	"PHPUnit file": {
		"prefix": "test",
		"body": [
			"namespace ${1:Tests}${2};",
			"",
			"use ${1}\\TestCase;",
			"",
			"class ${TM_FILENAME_BASE:ClassName}${3: extends TestCase}${4}",
			"{",
			"\t${5:// }",
			"}"
		]
	},
	"PHP short(hand/tag) output": {
		"prefix": "!!",
		"body": [
			"<?= ${1:mixed} ?>"
		]
	}
}